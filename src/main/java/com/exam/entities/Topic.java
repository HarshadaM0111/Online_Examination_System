package com.exam.entities;

import javax.persistence.*;
import java.util.List;

// This class represents a topic within a course, which can have multiple related questions.
@Entity // Marks this class as a JPA entity, meaning it's mapped to a table in the database.
@Table(name = "topics") // Specifies the table name ("topics") to store topics in the database.
public class Topic {

    // Primary key for the Topic entity.
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY) // The topicId is automatically generated by the database.
    private int topicId;

    // The name of the topic (e.g., "Java Basics", "Algorithms").
    @Column(nullable = false) // The topic name is required (cannot be null).
    private String topicName;

    // Many-to-one relationship: Each topic is associated with a specific course.
    @ManyToOne
    @JoinColumn(name = "course_id") // Foreign key column that links to the Course table.
    private Course course;

    // One-to-many relationship: A topic can have multiple related questions.
    @OneToMany(mappedBy = "topic", cascade = CascadeType.ALL, fetch = FetchType.LAZY) // Fetch questions lazily (only when needed).
    private List<Question> questions;

    // Default constructor (required by JPA/Hibernate).
    public Topic() {}

    // Constructor to initialize a Topic with the name and the associated course.
    public Topic(String topicName, Course course) {
        this.topicName = topicName;
        this.course = course;
    }

    // Override toString to provide a human-readable string representation of the Topic entity.
    @Override
    public String toString() {
        // To prevent infinite recursion, we check if the course is null before printing its ID.
        return "Topic [topicId=" + topicId + ", topicName=" + topicName + 
               ", course=" + (course != null ? course.getCourseId() : "null") + "]";
    }

    // Getters and Setters for each field in the Topic entity.

    public int getTopicId() {
        return topicId; // Returns the ID of the topic.
    }

    public void setTopicId(int topicId) {
        this.topicId = topicId; // Sets the ID of the topic.
    }

    public String getTopicName() {
        return topicName; // Returns the name of the topic.
    }

    public void setTopicName(String topicName) {
        this.topicName = topicName; // Sets the name of the topic.
    }

    public Course getCourse() {
        return course; // Returns the associated course for this topic.
    }

    public void setCourse(Course course) {
        this.course = course; // Sets the associated course for this topic.
    }

    public List<Question> getQuestions() {
        return questions; // Returns the list of questions related to this topic.
    }

    public void setQuestions(List<Question> questions) {
        this.questions = questions; // Sets the list of questions for this topic.
    }
}
